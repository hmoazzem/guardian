// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.19.6
// source: metrics.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// An empty message for the request
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_metrics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{0}
}

// A message representing cpu clock in GHz for all cores
type CPUClock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuClock []float32 `protobuf:"fixed32,1,rep,packed,name=cpu_clock,json=cpuClock,proto3" json:"cpu_clock,omitempty"`
}

func (x *CPUClock) Reset() {
	*x = CPUClock{}
	mi := &file_metrics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUClock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUClock) ProtoMessage() {}

func (x *CPUClock) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUClock.ProtoReflect.Descriptor instead.
func (*CPUClock) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *CPUClock) GetCpuClock() []float32 {
	if x != nil {
		return x.CpuClock
	}
	return nil
}

// A message representing utilization for all cores
type CPUUtilization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuUtilization []float32 `protobuf:"fixed32,1,rep,packed,name=cpu_utilization,json=cpuUtilization,proto3" json:"cpu_utilization,omitempty"`
}

func (x *CPUUtilization) Reset() {
	*x = CPUUtilization{}
	mi := &file_metrics_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUUtilization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUUtilization) ProtoMessage() {}

func (x *CPUUtilization) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUUtilization.ProtoReflect.Descriptor instead.
func (*CPUUtilization) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{2}
}

func (x *CPUUtilization) GetCpuUtilization() []float32 {
	if x != nil {
		return x.CpuUtilization
	}
	return nil
}

// A message representing hardware monitoring sensor data
type Hwmon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Composite float64        `protobuf:"fixed64,2,opt,name=composite,proto3" json:"composite,omitempty"`
	Sensors   []*HwmonSensor `protobuf:"bytes,3,rep,name=sensors,proto3" json:"sensors,omitempty"`
}

func (x *Hwmon) Reset() {
	*x = Hwmon{}
	mi := &file_metrics_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Hwmon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hwmon) ProtoMessage() {}

func (x *Hwmon) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hwmon.ProtoReflect.Descriptor instead.
func (*Hwmon) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{3}
}

func (x *Hwmon) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Hwmon) GetComposite() float64 {
	if x != nil {
		return x.Composite
	}
	return 0
}

func (x *Hwmon) GetSensors() []*HwmonSensor {
	if x != nil {
		return x.Sensors
	}
	return nil
}

// A message representing an individual hardware monitoring sensor
type HwmonSensor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Temp float64 `protobuf:"fixed64,2,opt,name=temp,proto3" json:"temp,omitempty"`
}

func (x *HwmonSensor) Reset() {
	*x = HwmonSensor{}
	mi := &file_metrics_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HwmonSensor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HwmonSensor) ProtoMessage() {}

func (x *HwmonSensor) ProtoReflect() protoreflect.Message {
	mi := &file_metrics_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HwmonSensor.ProtoReflect.Descriptor instead.
func (*HwmonSensor) Descriptor() ([]byte, []int) {
	return file_metrics_proto_rawDescGZIP(), []int{4}
}

func (x *HwmonSensor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HwmonSensor) GetTemp() float64 {
	if x != nil {
		return x.Temp
	}
	return 0
}

var File_metrics_proto protoreflect.FileDescriptor

var file_metrics_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x27, 0x0a, 0x08, 0x43, 0x50, 0x55, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x70, 0x75, 0x5f, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52,
	0x08, 0x63, 0x70, 0x75, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x39, 0x0a, 0x0e, 0x43, 0x50, 0x55,
	0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x70, 0x75, 0x5f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x02, 0x52, 0x0e, 0x63, 0x70, 0x75, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x68, 0x0a, 0x05, 0x48, 0x77, 0x6d, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x12,
	0x2d, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x48, 0x77, 0x6d, 0x6f, 0x6e, 0x53,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x52, 0x07, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73, 0x22, 0x35,
	0x0a, 0x0b, 0x48, 0x77, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x74, 0x65, 0x6d, 0x70, 0x32, 0xae, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x12, 0x33, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x50, 0x55, 0x43, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x10, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x50, 0x55, 0x43,
	0x6c, 0x6f, 0x63, 0x6b, 0x30, 0x01, 0x12, 0x3f, 0x0a, 0x14, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x43, 0x50, 0x55, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0d,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x50, 0x55, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x30, 0x01, 0x12, 0x2d, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x48, 0x77, 0x6d, 0x6f, 0x6e, 0x12, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x48,
	0x77, 0x6d, 0x6f, 0x6e, 0x30, 0x01, 0x42, 0x11, 0x5a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_metrics_proto_rawDescOnce sync.Once
	file_metrics_proto_rawDescData = file_metrics_proto_rawDesc
)

func file_metrics_proto_rawDescGZIP() []byte {
	file_metrics_proto_rawDescOnce.Do(func() {
		file_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(file_metrics_proto_rawDescData)
	})
	return file_metrics_proto_rawDescData
}

var file_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_metrics_proto_goTypes = []any{
	(*Empty)(nil),          // 0: system.Empty
	(*CPUClock)(nil),       // 1: system.CPUClock
	(*CPUUtilization)(nil), // 2: system.CPUUtilization
	(*Hwmon)(nil),          // 3: system.Hwmon
	(*HwmonSensor)(nil),    // 4: system.HwmonSensor
}
var file_metrics_proto_depIdxs = []int32{
	4, // 0: system.Hwmon.sensors:type_name -> system.HwmonSensor
	0, // 1: system.Metrics.StreamCPUClock:input_type -> system.Empty
	0, // 2: system.Metrics.StreamCPUUtilization:input_type -> system.Empty
	0, // 3: system.Metrics.StreamHwmon:input_type -> system.Empty
	1, // 4: system.Metrics.StreamCPUClock:output_type -> system.CPUClock
	2, // 5: system.Metrics.StreamCPUUtilization:output_type -> system.CPUUtilization
	3, // 6: system.Metrics.StreamHwmon:output_type -> system.Hwmon
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_metrics_proto_init() }
func file_metrics_proto_init() {
	if File_metrics_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_metrics_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metrics_proto_goTypes,
		DependencyIndexes: file_metrics_proto_depIdxs,
		MessageInfos:      file_metrics_proto_msgTypes,
	}.Build()
	File_metrics_proto = out.File
	file_metrics_proto_rawDesc = nil
	file_metrics_proto_goTypes = nil
	file_metrics_proto_depIdxs = nil
}
